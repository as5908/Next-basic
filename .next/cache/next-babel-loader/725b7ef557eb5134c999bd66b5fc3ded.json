{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\workspace\\\\react-colt\\\\next\\\\first-next\\\\pages\\\\index.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport Link from 'next/link';\n\nvar Index = function Index(_ref) {\n  var posts = _ref.posts;\n  console.log(posts); // useEffect(() => {\n  //   console.log('Fetching your data in useEffect!!'); // happens on client side, mounting only happens in DOM i.e client side\n  // });\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, \"Our Index Page\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, posts.map(function (post) {\n    return __jsx(\"li\", {\n      key: post.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    }, __jsx(Link, {\n      href: \"/post?id=\".concat(post.id),\n      as: \"/p/\".concat(post.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 15\n      }\n    }, post.title)));\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var _await$axios$get, data;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.get('https://jsonplaceholder.typicode.com/posts'));\n\n        case 2:\n          _await$axios$get = _context.sent;\n          data = _await$axios$get.data;\n          console.log(data[0]);\n          return _context.abrupt(\"return\", {\n            posts: data,\n            mood: 'HAPPY'\n          });\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["E:/workspace/react-colt/next/first-next/pages/index.js"],"names":["React","useEffect","axios","Link","Index","posts","console","log","map","post","id","title","getInitialProps","get","data","mood"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAD2B,CAE3B;AACA;AACA;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACG,GAAN,CAAU,UAACC,IAAD;AAAA,WACT;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,qBAAcD,IAAI,CAACC,EAAnB,CAAV;AAAmC,MAAA,EAAE,eAAQD,IAAI,CAACC,EAAb,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,KAAT,CADF,CADF,CADS;AAAA,GAAV,CADH,CAFF,CADF;AAcD,CApBD;;AAsBAP,KAAK,CAACQ,eAAN,GAAwB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACCV,KAAK,CAACW,GAAN,CACrB,4CADqB,CADD;;AAAA;AAAA;AACdC,UAAAA,IADc,oBACdA,IADc;AAItBR,UAAAA,OAAO,CAACC,GAAR,CAAYO,IAAI,CAAC,CAAD,CAAhB;AAJsB,2CAKf;AAAET,YAAAA,KAAK,EAAES,IAAT;AAAeC,YAAAA,IAAI,EAAE;AAArB,WALe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAQA,eAAeX,KAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Link from 'next/link';\r\nconst Index = ({ posts }) => {\r\n  console.log(posts);\r\n  // useEffect(() => {\r\n  //   console.log('Fetching your data in useEffect!!'); // happens on client side, mounting only happens in DOM i.e client side\r\n  // });\r\n\r\n  return (\r\n    <div>\r\n      <h1>Our Index Page</h1>\r\n      <ul>\r\n        {posts.map((post) => (\r\n          <li key={post.id}>\r\n            <Link href={`/post?id=${post.id}`} as={`/p/${post.id}`}>\r\n              <a>{post.title}</a>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nIndex.getInitialProps = async () => {\r\n  const { data } = await axios.get(\r\n    'https://jsonplaceholder.typicode.com/posts'\r\n  );\r\n  console.log(data[0]);\r\n  return { posts: data, mood: 'HAPPY' };\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}