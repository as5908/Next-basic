{"ast":null,"code":"var _jsxFileName = \"E:\\\\workspace\\\\react-colt\\\\next\\\\first-next\\\\pages\\\\post.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from 'react';\nimport { withRouter } from 'next/router';\nimport axios from 'axios'; // const Post = ({ router }) => (\n//   <h1>You are looking at Post# {router.query.id}</h1>\n// );\n// export default withRouter(Post);\n\nconst Post = ({\n  comments,\n  id\n}) => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, \"You are looking at Post#\", id), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, comments.map(comment => __jsx(\"li\", {\n    key: comment.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }, comment.body))));\n}; // 1 way is this other is using withRouter\n\n\nPost.getInitialProps = async ({\n  query\n}) => {\n  const {\n    data\n  } = await axios.get(`https://jsonplaceholder.typicode.com/comments?postId=${query.id}`);\n  console.log(data);\n  return _objectSpread({\n    comments: data\n  }, query);\n};\n\nexport default Post;","map":{"version":3,"sources":["E:/workspace/react-colt/next/first-next/pages/post.js"],"names":["React","useEffect","withRouter","axios","Post","comments","id","map","comment","body","getInitialProps","query","data","get","console","log"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;;AACA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAsB;AACjC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAA6BA,EAA7B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,CAACE,GAAT,CAAcC,OAAD,IACZ;AAAI,IAAA,GAAG,EAAEA,OAAO,CAACF,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBE,OAAO,CAACC,IAA9B,CADD,CADH,CAFF,CADF;AAUD,CAXD,C,CAaA;;;AACAL,IAAI,CAACM,eAAL,GAAuB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMT,KAAK,CAACU,GAAN,CACpB,wDAAuDF,KAAK,CAACL,EAAG,EAD5C,CAAvB;AAGAQ,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA;AAASP,IAAAA,QAAQ,EAAEO;AAAnB,KAA4BD,KAA5B;AACD,CAND;;AAQA,eAAeP,IAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { withRouter } from 'next/router';\r\nimport axios from 'axios';\r\n\r\n// const Post = ({ router }) => (\r\n//   <h1>You are looking at Post# {router.query.id}</h1>\r\n// );\r\n// export default withRouter(Post);\r\nconst Post = ({ comments, id }) => {\r\n  return (\r\n    <div>\r\n      <h1>You are looking at Post#{id}</h1>\r\n      <ul>\r\n        {comments.map((comment) => (\r\n          <li key={comment.id}>{comment.body}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 1 way is this other is using withRouter\r\nPost.getInitialProps = async ({ query }) => {\r\n  const { data } = await axios.get(\r\n    `https://jsonplaceholder.typicode.com/comments?postId=${query.id}`\r\n  );\r\n  console.log(data);\r\n  return { comments: data, ...query };\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}