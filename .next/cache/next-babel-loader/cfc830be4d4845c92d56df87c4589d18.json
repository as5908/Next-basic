{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\workspace\\\\react-colt\\\\next\\\\first-next\\\\pages\\\\post.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { withRouter } from 'next/router';\nimport axios from 'axios'; // const Post = ({ router }) => (\n//   <h1>You are looking at Post# {router.query.id}</h1>\n// );\n// export default withRouter(Post);\n\nvar Post = function Post(_ref) {\n  var id = _ref.id;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, \"You are looking at Post#\", id));\n}; // 1 way is this other is using withRouter\n\n\nPost.getInitialProps = function _callee(_ref2) {\n  var query, _await$axios$get, data;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref2.query;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axios.get(\"https://jsonplaceholder.typicode.com/comments?postId=\".concat(query.id)));\n\n        case 3:\n          _await$axios$get = _context.sent;\n          data = _await$axios$get.data;\n          console.log(data);\n          return _context.abrupt(\"return\", query);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Post;","map":{"version":3,"sources":["E:/workspace/react-colt/next/first-next/pages/post.js"],"names":["React","useEffect","withRouter","axios","Post","id","getInitialProps","query","get","data","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAY;AAAA,MAATC,EAAS,QAATA,EAAS;AACvB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAA6BA,EAA7B,CADF,CADF;AAKD,CAND,C,CAQA;;;AACAD,IAAI,CAACE,eAAL,GAAuB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,KAAT,SAASA,KAAT;AAAA;AAAA,2CACEJ,KAAK,CAACK,GAAN,gEACmCD,KAAK,CAACF,EADzC,EADF;;AAAA;AAAA;AACbI,UAAAA,IADa,oBACbA,IADa;AAIrBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAJqB,2CAKdF,KALc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAQA,eAAeH,IAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { withRouter } from 'next/router';\r\nimport axios from 'axios';\r\n\r\n// const Post = ({ router }) => (\r\n//   <h1>You are looking at Post# {router.query.id}</h1>\r\n// );\r\n// export default withRouter(Post);\r\nconst Post = ({ id }) => {\r\n  return (\r\n    <div>\r\n      <h1>You are looking at Post#{id}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\n// 1 way is this other is using withRouter\r\nPost.getInitialProps = async ({ query }) => {\r\n  const { data } = await axios.get(\r\n    `https://jsonplaceholder.typicode.com/comments?postId=${query.id}`\r\n  );\r\n  console.log(data);\r\n  return query;\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}